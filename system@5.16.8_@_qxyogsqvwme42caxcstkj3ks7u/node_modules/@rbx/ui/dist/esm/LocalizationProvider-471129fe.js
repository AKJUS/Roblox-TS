import{_ as e}from"./extends-64d70faf.js";import*as t from"react";import{p as a}from"./createTheme-1ca289da.js";import{jsx as o}from"react/jsx-runtime";import{u as i}from"./useThemeProps-589cc86d.js";const r={previousMonth:"Previous month",nextMonth:"Next month",openPreviousView:"open previous view",openNextView:"open next view",calendarViewSwitchingButtonAriaLabel:e=>"year"===e?"year view is open, switch to calendar view":"calendar view is open, switch to year view",inputModeToggleButtonAriaLabel:(e,t)=>e?`text input view is open, go to ${t} view`:`${t} view is open, go to text input view`,start:"Start",end:"End",cancelButtonLabel:"Cancel",clearButtonLabel:"Clear",okButtonLabel:"OK",todayButtonLabel:"Today",datePickerDefaultToolbarTitle:"Select date",dateTimePickerDefaultToolbarTitle:"Select date & time",timePickerDefaultToolbarTitle:"Select time",dateRangePickerDefaultToolbarTitle:"Select date range",clockLabelText:(e,t,a)=>`Select ${e}. ${null===t?"No time selected":`Selected time is ${a.format(t,"fullTime")}`}`,hoursClockNumberText:e=>`${e} hours`,minutesClockNumberText:e=>`${e} minutes`,secondsClockNumberText:e=>`${e} seconds`,openDatePickerDialogue:(e,t)=>e&&t.isValid(t.date(e))?`Choose date, selected date is ${t.format(t.date(e),"fullDate")}`:"Choose date",openTimePickerDialogue:(e,t)=>e&&t.isValid(t.date(e))?`Choose time, selected time is ${t.format(t.date(e),"fullTime")}`:"Choose time",timeTableLabel:"pick time",dateTableLabel:"pick date"},n=r;e({},r);const l=t.createContext(null);"production"!==process.env.NODE_ENV&&(l.displayName="MuiPickersAdapterContext");let s=!1;function c(a){const r=i({props:a,name:"MuiLocalizationProvider"}),{children:c,dateAdapter:d,dateFormats:m,dateLibInstance:u,locale:p,adapterLocale:h,localeText:T}=r;"production"!==process.env.NODE_ENV&&(s||void 0===p||(s=!0,console.warn("LocalizationProvider's prop `locale` is deprecated and replaced by `adapterLocale`")));const g=t.useMemo((()=>new d({locale:null!=h?h:p,formats:m,instance:u})),[d,p,h,m,u]),f=t.useMemo((()=>({minDate:g.date("1900-01-01T00:00:00.000"),maxDate:g.date("2099-12-31T00:00:00.000")})),[g]),b=t.useMemo((()=>({utils:g,defaultDates:f,localeText:e({},n,null!=T?T:{})})),[f,g,T]);return o(l.Provider,{value:b,children:c})}"production"!==process.env.NODE_ENV&&(c.propTypes={adapterLocale:a.oneOfType([a.object,a.string]),children:a.node,dateAdapter:a.func.isRequired,dateFormats:a.shape({dayOfMonth:a.string,fullDate:a.string,fullDateTime:a.string,fullDateTime12h:a.string,fullDateTime24h:a.string,fullDateWithWeekday:a.string,fullTime:a.string,fullTime12h:a.string,fullTime24h:a.string,hours12h:a.string,hours24h:a.string,keyboardDate:a.string,keyboardDateTime:a.string,keyboardDateTime12h:a.string,keyboardDateTime24h:a.string,minutes:a.string,month:a.string,monthAndDate:a.string,monthAndYear:a.string,monthShort:a.string,normalDate:a.string,normalDateWithWeekday:a.string,seconds:a.string,shortDate:a.string,weekday:a.string,weekdayShort:a.string,year:a.string}),dateLibInstance:a.any,locale:a.oneOfType([a.object,a.string]),localeText:a.object});export{c as L,l as M};
